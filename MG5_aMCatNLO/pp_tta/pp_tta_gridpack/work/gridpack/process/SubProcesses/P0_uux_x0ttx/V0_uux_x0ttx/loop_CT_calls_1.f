      SUBROUTINE LOOP_CT_CALLS_1(P,NHEL,H,IC)
C     
C     Modules
C     
      USE POLYNOMIAL_CONSTANTS
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NCOMB
      PARAMETER (NCOMB=16)
      INTEGER NBORNAMPS
      PARAMETER (NBORNAMPS=2)
      INTEGER    NLOOPS, NLOOPGROUPS, NCTAMPS
      PARAMETER (NLOOPS=35, NLOOPGROUPS=23, NCTAMPS=72)
      INTEGER    NLOOPAMPS
      PARAMETER (NLOOPAMPS=107)
      INTEGER    NWAVEFUNCS,NLOOPWAVEFUNCS
      PARAMETER (NWAVEFUNCS=13,NLOOPWAVEFUNCS=73)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      REAL*16     MP__ZERO
      PARAMETER (MP__ZERO=0.0E0_16)
C     These are constants related to the split orders
      INTEGER    NSO, NSQUAREDSO, NAMPSO
      PARAMETER (NSO=1, NSQUAREDSO=1, NAMPSO=2)
C     
C     ARGUMENTS
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      INTEGER H
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J,K
      COMPLEX*16 COEFS(MAXLWFSIZE,0:VERTEXMAXCOEFS-1,MAXLWFSIZE)

      LOGICAL DUMMYFALSE
      DATA DUMMYFALSE/.FALSE./
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'
      INCLUDE 'mp_coupl.inc'

      INTEGER HELOFFSET
      INTEGER GOODHEL(NCOMB)
      LOGICAL GOODAMP(NSQUAREDSO,NLOOPGROUPS)
      COMMON/FILTERS/GOODAMP,GOODHEL,HELOFFSET

      LOGICAL CHECKPHASE
      LOGICAL HELDOUBLECHECKED
      COMMON/INIT/CHECKPHASE, HELDOUBLECHECKED

      INTEGER SQSO_TARGET
      COMMON/SOCHOICE/SQSO_TARGET

      LOGICAL UVCT_REQ_SO_DONE,MP_UVCT_REQ_SO_DONE,CT_REQ_SO_DONE
     $ ,MP_CT_REQ_SO_DONE,LOOP_REQ_SO_DONE,MP_LOOP_REQ_SO_DONE
     $ ,CTCALL_REQ_SO_DONE,FILTER_SO
      COMMON/SO_REQS/UVCT_REQ_SO_DONE,MP_UVCT_REQ_SO_DONE
     $ ,CT_REQ_SO_DONE,MP_CT_REQ_SO_DONE,LOOP_REQ_SO_DONE
     $ ,MP_LOOP_REQ_SO_DONE,CTCALL_REQ_SO_DONE,FILTER_SO

      INTEGER I_SO
      COMMON/I_SO/I_SO
      INTEGER I_LIB
      COMMON/I_LIB/I_LIB

      COMPLEX*16 AMP(NBORNAMPS)
      COMMON/AMPS/AMP
      COMPLEX*16 W(20,NWAVEFUNCS)
      COMMON/W/W

      COMPLEX*16 WL(MAXLWFSIZE,0:LOOPMAXCOEFS-1,MAXLWFSIZE
     $ ,0:NLOOPWAVEFUNCS)
      COMPLEX*16 PL(0:3,0:NLOOPWAVEFUNCS)
      COMMON/WL/WL,PL

      COMPLEX*16 AMPL(3,NCTAMPS)
      COMMON/AMPL/AMPL

C     
C     ----------
C     BEGIN CODE
C     ----------

C     The target squared split order contribution is already reached
C      if true.
      IF (FILTER_SO.AND.CTCALL_REQ_SO_DONE) THEN
        GOTO 1001
      ENDIF

C     CutTools call for loop numbers 1,2,32,33,34,35
      CALL LOOP_2(6,9,DCMPLX(ZERO),DCMPLX(ZERO),2,I_SO,1)
C     CutTools call for loop numbers 3
      CALL LOOP_5(1,2,5,3,4,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(ZERO),3,I_SO,2)
C     CutTools call for loop numbers 4
      CALL LOOP_5(1,2,4,3,5,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(ZERO),3,I_SO,3)
C     CutTools call for loop numbers 5,8,11,12
      CALL LOOP_3(1,2,9,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(ZERO),2,I_SO
     $ ,4)
C     CutTools call for loop numbers 6
      CALL LOOP_4(1,2,5,7,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(ZERO),2,I_SO,5)
C     CutTools call for loop numbers 7
      CALL LOOP_4(1,2,7,5,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(ZERO),2,I_SO,6)
C     CutTools call for loop numbers 9
      CALL LOOP_4(1,2,4,8,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(ZERO),2,I_SO,7)
C     CutTools call for loop numbers 10
      CALL LOOP_4(1,2,8,4,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(ZERO),2,I_SO,8)
C     CutTools call for loop numbers 13,14
      CALL LOOP_2(6,9,DCMPLX(MDL_MB),DCMPLX(MDL_MB),2,I_SO,9)
C     CutTools call for loop numbers 15,16
      CALL LOOP_3(3,6,11,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,3,I_SO,10)
C     CutTools call for loop numbers 17
      CALL LOOP_2(7,12,DCMPLX(ZERO),DCMPLX(MDL_MT),1,I_SO,11)
C     CutTools call for loop numbers 18,22
      CALL LOOP_2(6,9,DCMPLX(MDL_MT),DCMPLX(MDL_MT),2,I_SO,12)
C     CutTools call for loop numbers 19
      CALL LOOP_3(5,6,7,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(ZERO),2
     $ ,I_SO,13)
C     CutTools call for loop numbers 20
      CALL LOOP_3(5,6,7,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT),2
     $ ,I_SO,14)
C     CutTools call for loop numbers 21
      CALL LOOP_2(8,13,DCMPLX(ZERO),DCMPLX(MDL_MT),1,I_SO,15)
C     CutTools call for loop numbers 23
      CALL LOOP_3(4,6,8,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(ZERO),2
     $ ,I_SO,16)
C     CutTools call for loop numbers 24
      CALL LOOP_3(4,6,8,DCMPLX(ZERO),DCMPLX(ZERO),DCMPLX(MDL_MT),2
     $ ,I_SO,17)
C     CutTools call for loop numbers 25
      CALL LOOP_3(3,5,13,DCMPLX(MDL_MT),DCMPLX(ZERO),DCMPLX(MDL_MT),2
     $ ,I_SO,18)
C     CutTools call for loop numbers 26
      CALL LOOP_4(3,5,4,6,DCMPLX(MDL_MT),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,19)
C     CutTools call for loop numbers 27,28
      CALL LOOP_3(3,6,11,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,3,I_SO,20)
C     CutTools call for loop numbers 29
      CALL LOOP_4(3,4,5,6,DCMPLX(MDL_MT),DCMPLX(ZERO),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,21)
C     CutTools call for loop numbers 30
      CALL LOOP_4(3,4,6,5,DCMPLX(MDL_MT),DCMPLX(ZERO),DCMPLX(ZERO)
     $ ,DCMPLX(MDL_MT),3,I_SO,22)
C     CutTools call for loop numbers 31
      CALL LOOP_3(3,4,12,DCMPLX(MDL_MT),DCMPLX(ZERO),DCMPLX(MDL_MT),2
     $ ,I_SO,23)
C     At this point, all reductions needed for (QCD=6), i.e. of split
C      order ID=1, are computed.
      IF(FILTER_SO.AND.SQSO_TARGET.EQ.1) GOTO 5000

      GOTO 1001
 5000 CONTINUE
      CTCALL_REQ_SO_DONE=.TRUE.
 1001 CONTINUE
      END

